# This is a basic workflow to help you get started with Actions

name: My-GitHubActions-Basics
env:
  APPLICATION_NAME: "MyFlask"
  PACKAGE_NAME    : "flask_deploy_ver-${{ github.sha }}"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my_testing:
    runs-on: windows
    steps:
      - name: Print Hello Message in Testing
        run: echo "Hello World from Testing Job"
      - name: Execute few commands
        run: |
          echo "Hello Message1"
          echo "Hello Message2"
          echo "Hello Message3"
          echo "Application name: ${{ env.APPLICATION_NAME }}"
      
      - name: FULL CLONNING OF REPOSITORY
        uses: actions/checkout@v1    
      - name: List current folder
        run: ls -la
        
  #Another job added
  my_deploy:
    runs-on: ubuntu-latest
    needs: [my_testing]
    env:
        VAR1: "This is Job Level Variable1"
        VAR2: "This is job Level Variable2"
    steps:
      - name: Print Hello Message in Deploy
        run: echo "Hello World from Deploy Job"
        
      - name: Print env vars
        run: |
          echo "Var1 = ${{ env.VAR1 }}"
          echo "Var2 = ${{ env.VAR2 }}"
          echo "Var3 = $LOCAL_VAR"
        env:
          LOCAL_VAR: "This is Super local Environment variable"
        
      - name: Deployment package
        run: echo "Deploy package name is ${{ env.PACKAGE_NAME }}"
      
      - name: Lets test some packages if they are here 1
        run: aws --version
       
      - name: Lets test some packages if they are here 2
        run: zip --version
